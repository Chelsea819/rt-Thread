# Building rtthread-run [riscv32-nemu]
# Building am-archive [riscv32-nemu]
+ CC src/platform/nemu/trm.c
+ AR -> build/am-riscv32-nemu.a
# Building klib-archive [riscv32-nemu]
+ LD -> build/rtthread-riscv32-nemu.elf
# Creating image [riscv32-nemu]
+ OBJCOPY -> build/rtthread-riscv32-nemu.bin
ARCHIVES = 
ARCHIVE = /home/chelsea/rt-Thread/rt-thread-am/bsp/abstract-machine/build/rtthread-riscv32-nemu.a
make -C /home/chelsea/ysyx-workbench/nemu ISA=riscv32 run ARGS="-l /home/chelsea/rt-Thread/rt-thread-am/bsp/abstract-machine/build/nemu-log.txt  -f /home/chelsea/rt-Thread/rt-thread-am/bsp/abstract-machine/build/rtthread-riscv32-nemu.elf -f /home/chelsea/ysyx-workbench/nemu/../navy-apps/apps/nslider/build/nslider-riscv32 " IMG=/home/chelsea/rt-Thread/rt-thread-am/bsp/abstract-machine/build/rtthread-riscv32-nemu.bin
make[1]: 进入目录“/home/chelsea/ysyx-workbench/nemu”
make[2]: 进入目录“/home/chelsea/ysyx-workbench”
make[2]: 离开目录“/home/chelsea/ysyx-workbench”
+ LD /home/chelsea/ysyx-workbench/nemu/build/riscv32-nemu-interpreter
make -s -C /home/chelsea/ysyx-workbench/nemu/tools/spike-diff GUEST_ISA=riscv32 SHARE=1 ENGINE=interpreter
make[2]: 进入目录“/home/chelsea/ysyx-workbench/nemu/tools/spike-diff”
make[3]: 进入目录“/home/chelsea/ysyx-workbench/nemu/tools/spike-diff/repo/build”
make[3]: 离开目录“/home/chelsea/ysyx-workbench/nemu/tools/spike-diff/repo/build”
make[2]: 离开目录“/home/chelsea/ysyx-workbench/nemu/tools/spike-diff”
make[2]: 进入目录“/home/chelsea/ysyx-workbench”
make[2]: 离开目录“/home/chelsea/ysyx-workbench”
/home/chelsea/ysyx-workbench/nemu/build/riscv32-nemu-interpreter -l /home/chelsea/rt-Thread/rt-thread-am/bsp/abstract-machine/build/nemu-log.txt  -f /home/chelsea/rt-Thread/rt-thread-am/bsp/abstract-machine/build/rtthread-riscv32-nemu.elf -f /home/chelsea/ysyx-workbench/nemu/../navy-apps/apps/nslider/build/nslider-riscv32  --diff=/home/chelsea/ysyx-workbench/nemu/tools/spike-diff/build/riscv32-spike-so  /home/chelsea/rt-Thread/rt-thread-am/bsp/abstract-machine/build/rtthread-riscv32-nemu.bin 
filename = /home/chelsea/rt-Thread/rt-thread-am/bsp/abstract-machine/build/rtthread-riscv32-nemu.elf
filename = /home/chelsea/ysyx-workbench/nemu/../navy-apps/apps/nslider/build/nslider-riscv32
[1;34m[src/utils/log.c:32 init_log] Log is written to /home/chelsea/rt-Thread/rt-thread-am/bsp/abstract-machine/build/nemu-log.txt[0m
output to input.txt!
[1;34m[src/memory/paddr.c:75 init_mem] physical memory area [0x80000000, 0x87ffffff][0m
[1;34m[src/device/io/mmio.c:50 add_mmio_map] Add mmio map 'serial' at [0xa00003f8, 0xa00003ff][0m
[1;34m[src/device/io/mmio.c:50 add_mmio_map] Add mmio map 'rtc' at [0xa0000048, 0xa000004f][0m
[1;34m[src/device/io/mmio.c:50 add_mmio_map] Add mmio map 'vgactl' at [0xa0000100, 0xa0000107][0m
[1;34m[src/device/io/mmio.c:50 add_mmio_map] Add mmio map 'vmem' at [0xa1000000, 0xa10752ff][0m
[1;34m[src/device/io/mmio.c:50 add_mmio_map] Add mmio map 'keyboard' at [0xa0000060, 0xa0000063][0m
[1;34m[src/monitor/monitor.c:96 load_img] The image is /home/chelsea/rt-Thread/rt-thread-am/bsp/abstract-machine/build/rtthread-riscv32-nemu.bin, size = 2964144[0m
cpu.csr[CSR_MSTATUS] = 0x00001800
[1;34m[src/cpu/difftest/dut.c:97 init_difftest] Differential testing: [1;32mON[0m[0m
[1;34m[src/cpu/difftest/dut.c:98 init_difftest] The result of every instruction will be compared with /home/chelsea/ysyx-workbench/nemu/tools/spike-diff/build/riscv32-spike-so. This will help you a lot for debugging, but also significantly reduce the performance. If it is not necessary, you can turn it off in menuconfig.[0m
fileNum = 2
Elf_header.e_ident: ELF
fileNum = 2
Elf_header.e_ident: ELF
[1;34m[src/monitor/monitor.c:35 welcome] Trace: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c:36 welcome] If trace is enabled, a log file will be generated to record the trace. This may lead to a large log file. If it is not necessary, you can disable it in menuconfig[0m
[1;34m[src/monitor/monitor.c:39 welcome] Build time: 16:43:13, Jul 26 2024[0m
Welcome to [1;33m[1;41mriscv32[0m-NEMU!
For help, type "help"
[?2004h(nemu) c
[?2004lindex 1-> 0x80057d84: [102m call[_trm_init@0x80057d84] [m
index 2-> 0x80000188: [102m call[main@0x80000188] [m
index 3-> 0x80057e38: [102m call[ioe_init@0x80057e38] [m
index 4-> 0x80057f68: [102m call[__am_gpu_init@0x80057f68] [m
index 5-> 0x80057ecc: [102m call[__am_timer_init@0x80057ecc] [m
index 6-> 0x8005803c: [102m call[__am_audio_init@0x8005803c] [m
index 7-> 0x800003e4: [102m call[__am_cte_init@0x800003e4] [m
index 8-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 9-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 24-> 0x80013138: [102m call[entry@0x80013138] [m
index 25-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 26-> 0x80000020: [102m call[rt_hw_board_init@0x80000020] [m
index 27-> 0x80000298: [102m call[rt_hw_uart_init@0x80000298] [m
index 28-> 0x8000e14c: [102m call[rt_hw_serial_regist@0x8000e14c] [m
index 29-> 0x80017928: [102m call[rt_object_find@0x80017928] [m
index 30-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 31-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 32-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 33-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 34-> 0x80017e8c: [102m call[rt_enter_critical@0x80017e8c] [m
index 35-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 36-> 0x80017eb8: [102m call[rt_exit_critical@0x80017eb8] [m
index 37-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 38-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 39-> 0x80017498: [102m call[rt_object_init@0x80017498] [m
index 40-> 0x80017e8c: [102m call[rt_enter_critical@0x80017e8c] [m
index 41-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 42-> 0x80017eb8: [102m call[rt_exit_critical@0x80017eb8] [m
index 43-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 44-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 45-> 0x8001590c: [102m call[rt_strncpy@0x8001590c] [m
index 46-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 47-> 0x80016c68: [102m call[rt_smem_init@0x80016c68] [m
index 48-> 0x80017498: [102m call[rt_object_init@0x80017498] [m
index 49-> 0x80017e8c: [102m call[rt_enter_critical@0x80017e8c] [m
index 50-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 51-> 0x80017eb8: [102m call[rt_exit_critical@0x80017eb8] [m
index 52-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 53-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 54-> 0x8001590c: [102m call[rt_strncpy@0x8001590c] [m
index 55-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 56-> 0x80017498: [102m call[rt_object_init@0x80017498] [m
index 57-> 0x80017e8c: [102m call[rt_enter_critical@0x80017e8c] [m
index 58-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 59-> 0x80017eb8: [102m call[rt_exit_critical@0x80017eb8] [m
index 60-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 61-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 62-> 0x8001590c: [102m call[rt_strncpy@0x8001590c] [m
index 63-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 64-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 65-> 0x80016d74: [102m call[rt_smem_alloc@0x80016d74] [m
index 66-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 67-> 0x80017870: [102m call[rt_object_is_system@0x80017870] [m
index 68-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 69-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 70-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 71-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 72-> 0x800588d0: [102m call[intHandel@0x800588d0] [m
index 73-> 0x800588d0: [102m call[intHandel@0x800588d0] [m
index 128-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 129-> 0x80016d74: [102m call[rt_smem_alloc@0x80016d74] [m
index 130-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 131-> 0x80017870: [102m call[rt_object_is_system@0x80017870] [m
index 132-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 133-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 134-> 0x80059390: [102m call[memcpy@0x80059390] [m
index 135-> 0x80016040: [102m call[rt_console_set_devi@0x80016040] [m
index 136-> 0x800131e4: [102m call[rt_device_find@0x800131e4] [m
index 137-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 138-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 139-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 140-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 141-> 0x80017e8c: [102m call[rt_enter_critical@0x80017e8c] [m
index 142-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 143-> 0x80015958: [102m call[rt_strncmp@0x80015958] [m
index 144-> 0x80017eb8: [102m call[rt_exit_critical@0x80017eb8] [m
index 145-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 146-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 147-> 0x800131ec: [102m call[rt_device_open@0x800131ec] [m
index 148-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 149-> 0x80013074: [102m call[rt_components_board@0x80013074] [m
index 150-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 151-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 152-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 153-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 154-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 155-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 156-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 157-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 158-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 159-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 160-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 161-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 162-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 163-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 164-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 165-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 166-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 167-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 168-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 169-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 170-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 171-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 172-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 173-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 174-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 175-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 176-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 177-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 178-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 179-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 180-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 181-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 182-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 183-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 184-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 185-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 186-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 187-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 188-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 189-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 190-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 191-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 192-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 193-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 194-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 195-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 196-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 197-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 198-> 0x80013540: [102m call[rt_device_write@0x80013540] [m
index 199-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 233-> 0x80016160: [102m call[rt_show_version@0x80016160] [m
index 234-> 0x80013540: [102m call[rt_device_write@0x80013540] [m
index 235-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 246-> 0x80013540: [102m call[rt_device_write@0x80013540] [m
index 247-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 284-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 285-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 286-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 287-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 288-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 289-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 290-> 0x80013540: [102m call[rt_device_write@0x80013540] [m
index 291-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 337-> 0x80013540: [102m call[rt_device_write@0x80013540] [m
index 338-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 381-> 0x800193e8: [102m call[rt_system_timer_ini@0x800193e8] [m
index 382-> 0x80017a50: [102m call[rt_system_scheduler@0x80017a50] [m
index 383-> 0x800130bc: [102m call[rt_application_init@0x800130bc] [m
index 384-> 0x8001838c: [102m call[rt_thread_create@0x8001838c] [m
index 385-> 0x80017670: [102m call[rt_object_allocate@0x80017670] [m
index 386-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 387-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 388-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 389-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 390-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 391-> 0x80016d74: [102m call[rt_smem_alloc@0x80016d74] [m
index 392-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 393-> 0x80017870: [102m call[rt_object_is_system@0x80017870] [m
index 394-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 395-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 396-> 0x8001590c: [102m call[rt_strncpy@0x8001590c] [m
index 397-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 398-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 399-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 400-> 0x80016d74: [102m call[rt_smem_alloc@0x80016d74] [m
index 401-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 402-> 0x80017870: [102m call[rt_object_is_system@0x80017870] [m
index 403-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 404-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 405-> 0x800004c8: [102m call[rt_hw_stack_init@0x800004c8] [m
index 406-> 0x800590e0: [102m call[malloc@0x800590e0] [m
index 407-> 0x8005816c: [102m call[kcontext@0x8005816c] [m
index 408-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 409-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 430-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 431-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 458-> 0x80018c24: [102m call[rt_timer_init@0x80018c24] [m
index 459-> 0x80017498: [102m call[rt_object_init@0x80017498] [m
index 460-> 0x80017e8c: [102m call[rt_enter_critical@0x80017e8c] [m
index 461-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 462-> 0x80017eb8: [102m call[rt_exit_critical@0x80017eb8] [m
index 463-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 464-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 465-> 0x8001590c: [102m call[rt_strncpy@0x8001590c] [m
index 466-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 467-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 468-> 0x800188d4: [102m call[rt_thread_resume@0x800188d4] [m
index 469-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 470-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 471-> 0x80018f98: [102m call[rt_timer_stop@0x80018f98] [m
index 472-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 473-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 474-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 475-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 476-> 0x80017a84: [102m call[rt_schedule_insert_@0x80017a84] [m
index 477-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 478-> 0x800193fc: [102m call[rt_system_timer_thr@0x800193fc] [m
index 479-> 0x80018180: [102m call[rt_thread_init@0x80018180] [m
index 480-> 0x80017498: [102m call[rt_object_init@0x80017498] [m
index 481-> 0x80017e8c: [102m call[rt_enter_critical@0x80017e8c] [m
index 482-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 483-> 0x80017eb8: [102m call[rt_exit_critical@0x80017eb8] [m
index 484-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 485-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 486-> 0x8001590c: [102m call[rt_strncpy@0x8001590c] [m
index 487-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 488-> 0x800004c8: [102m call[rt_hw_stack_init@0x800004c8] [m
index 489-> 0x800590e0: [102m call[malloc@0x800590e0] [m
index 490-> 0x8005816c: [102m call[kcontext@0x8005816c] [m
index 491-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 492-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 513-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 514-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 541-> 0x80018c24: [102m call[rt_timer_init@0x80018c24] [m
index 542-> 0x80017498: [102m call[rt_object_init@0x80017498] [m
index 543-> 0x80017e8c: [102m call[rt_enter_critical@0x80017e8c] [m
index 544-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 545-> 0x80017eb8: [102m call[rt_exit_critical@0x80017eb8] [m
index 546-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 547-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 548-> 0x8001590c: [102m call[rt_strncpy@0x8001590c] [m
index 549-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 550-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 551-> 0x800188d4: [102m call[rt_thread_resume@0x800188d4] [m
index 552-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 553-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 554-> 0x80018f98: [102m call[rt_timer_stop@0x80018f98] [m
index 555-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 556-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 557-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 558-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 559-> 0x80017a84: [102m call[rt_schedule_insert_@0x80017a84] [m
index 560-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 561-> 0x80013838: [102m call[rt_thread_idle_init@0x80013838] [m
index 562-> 0x80015fc8: [102m call[rt_snprintf@0x80015fc8] [m
index 563-> 0x80018180: [102m call[rt_thread_init@0x80018180] [m
index 564-> 0x80017498: [102m call[rt_object_init@0x80017498] [m
index 565-> 0x80017e8c: [102m call[rt_enter_critical@0x80017e8c] [m
index 566-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 567-> 0x80017eb8: [102m call[rt_exit_critical@0x80017eb8] [m
index 568-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 569-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 570-> 0x8001590c: [102m call[rt_strncpy@0x8001590c] [m
index 571-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 572-> 0x800004c8: [102m call[rt_hw_stack_init@0x800004c8] [m
index 573-> 0x800590e0: [102m call[malloc@0x800590e0] [m
index 574-> 0x8005816c: [102m call[kcontext@0x8005816c] [m
index 575-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 576-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 597-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 598-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 625-> 0x80018c24: [102m call[rt_timer_init@0x80018c24] [m
index 626-> 0x80017498: [102m call[rt_object_init@0x80017498] [m
index 627-> 0x80017e8c: [102m call[rt_enter_critical@0x80017e8c] [m
index 628-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 629-> 0x80017eb8: [102m call[rt_exit_critical@0x80017eb8] [m
index 630-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 631-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 632-> 0x8001590c: [102m call[rt_strncpy@0x8001590c] [m
index 633-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 634-> 0x800189b0: [102m call[rt_thread_startup@0x800189b0] [m
index 635-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 636-> 0x800188d4: [102m call[rt_thread_resume@0x800188d4] [m
index 637-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 638-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 639-> 0x80018f98: [102m call[rt_timer_stop@0x80018f98] [m
index 640-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 641-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 642-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 643-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 644-> 0x80017a84: [102m call[rt_schedule_insert_@0x80017a84] [m
index 645-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 646-> 0x80017c10: [102m call[rt_system_scheduler@0x80017c10] [m
index 647-> 0x80016738: [102m call[__rt_ffs@0x80016738] [m
index 648-> 0x80017b68: [102m call[rt_schedule_remove_@0x80017b68] [m
index 649-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 650-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 651-> 0x800581b4: [102m call[yield@0x800581b4] [m
index 652-> 0x80058068: [102m call[__am_irq_handle@0x80058068] [m
index 653-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 654-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 655-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 701-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 702-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 752-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 753-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 802-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 803-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 804-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 805-> 0x8001852c: [102m call[rt_thread_suspend_w@0x8001852c] [m
index 806-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 807-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 808-> 0x80017b68: [102m call[rt_schedule_remove_@0x80017b68] [m
index 809-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 810-> 0x80018f98: [102m call[rt_timer_stop@0x80018f98] [m
index 811-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 812-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 813-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 814-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 815-> 0x80017c70: [102m call[rt_schedule@0x80017c70] [m
index 816-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 817-> 0x80016738: [102m call[__rt_ffs@0x80016738] [m
index 818-> 0x80017b68: [102m call[rt_schedule_remove_@0x80017b68] [m
index 819-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 820-> 0x80000444: [102m call[rt_hw_context_switc@0x80000444] [m
index 821-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 822-> 0x800581b4: [102m call[yield@0x800581b4] [m
index 823-> 0x80058068: [102m call[__am_irq_handle@0x80058068] [m
index 824-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 825-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 826-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 872-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 873-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 923-> 0x80058f60: [102m call[printf@0x80058f60] [m
index 924-> 0x8005894c: [102m call[vsnprintf@0x8005894c] [m
index 973-> 0x80013014: [102m call[main_thread_entry@0x80013014] [m
index 974-> 0x8000917c: [102m call[dfs_init@0x8000917c] [m
index 975-> 0x80009e1c: [102m call[dfs_vnode_mgr_init@0x80009e1c] [m
index 976-> 0x800148f0: [102m call[rt_mutex_init@0x800148f0] [m
index 977-> 0x80017498: [102m call[rt_object_init@0x80017498] [m
index 978-> 0x80017e8c: [102m call[rt_enter_critical@0x80017e8c] [m
index 979-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 980-> 0x80017eb8: [102m call[rt_exit_critical@0x80017eb8] [m
index 981-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 982-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 983-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 984-> 0x80016738: [102m call[__rt_ffs@0x80016738] [m
index 985-> 0x80017b68: [102m call[rt_schedule_remove_@0x80017b68] [m
index 986-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 987-> 0x8001590c: [102m call[rt_strncpy@0x8001590c] [m
index 988-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 989-> 0x800148f0: [102m call[rt_mutex_init@0x800148f0] [m
index 990-> 0x80017498: [102m call[rt_object_init@0x80017498] [m
index 991-> 0x80017e8c: [102m call[rt_enter_critical@0x80017e8c] [m
index 992-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 993-> 0x80017eb8: [102m call[rt_exit_critical@0x80017eb8] [m
index 994-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 995-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 996-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 997-> 0x80016738: [102m call[__rt_ffs@0x80016738] [m
index 998-> 0x80017b68: [102m call[rt_schedule_remove_@0x80017b68] [m
index 999-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1000-> 0x8001590c: [102m call[rt_strncpy@0x8001590c] [m
index 1001-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1002-> 0x800148f0: [102m call[rt_mutex_init@0x800148f0] [m
index 1003-> 0x80017498: [102m call[rt_object_init@0x80017498] [m
index 1004-> 0x80017e8c: [102m call[rt_enter_critical@0x80017e8c] [m
index 1005-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1006-> 0x80017eb8: [102m call[rt_exit_critical@0x80017eb8] [m
index 1007-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1008-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1009-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1010-> 0x80016738: [102m call[__rt_ffs@0x80016738] [m
index 1011-> 0x80017b68: [102m call[rt_schedule_remove_@0x80017b68] [m
index 1012-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1013-> 0x8001590c: [102m call[rt_strncpy@0x8001590c] [m
index 1014-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1015-> 0x80000dcc: [102m call[devfs_init@0x80000dcc] [m
index 1016-> 0x8000afc8: [102m call[dfs_register@0x8000afc8] [m
index 1017-> 0x80009384: [102m call[dfs_lock@0x80009384] [m
index 1018-> 0x80014db4: [102m call[rt_mutex_take@0x80014db4] [m
index 1019-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1020-> 0x80017f20: [102m call[rt_critical_level@0x80017f20] [m
index 1021-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1022-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 1023-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1024-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1025-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1026-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1027-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1028-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1029-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 1030-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 1031-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1032-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1033-> 0x800093e4: [102m call[dfs_unlock@0x800093e4] [m
index 1034-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 1035-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1036-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 1037-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1038-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1039-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1040-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1041-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1042-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 1043-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1044-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1045-> 0x8000b18c: [102m call[dfs_mount@0x8000b18c] [m
index 1046-> 0x80009384: [102m call[dfs_lock@0x80009384] [m
index 1047-> 0x80014db4: [102m call[rt_mutex_take@0x80014db4] [m
index 1048-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1049-> 0x80017f20: [102m call[rt_critical_level@0x80017f20] [m
index 1050-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1051-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 1052-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1053-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1054-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1055-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1056-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1057-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1058-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 1059-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 1060-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1061-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1062-> 0x8005915c: [102m call[strlen@0x8005915c] [m
index 1063-> 0x800592f8: [102m call[strncmp@0x800592f8] [m
index 1064-> 0x800093e4: [102m call[dfs_unlock@0x800093e4] [m
index 1065-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 1066-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1067-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 1068-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1069-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1070-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1071-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1072-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1073-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 1074-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1075-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1076-> 0x800155bc: [102m call[rt_set_errno@0x800155bc] [m
index 1077-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1078-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1079-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 1080-> 0x8000c8f4: [102m call[rt_workqueue_create@0x8000c8f4] [m
index 1081-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 1082-> 0x80014db4: [102m call[rt_mutex_take@0x80014db4] [m
index 1083-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1084-> 0x80017f20: [102m call[rt_critical_level@0x80017f20] [m
index 1085-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1086-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 1087-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1088-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1089-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1090-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1091-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1092-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1093-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 1094-> 0x80018274: [102m call[rt_thread_self@0x80018274] [m
index 1095-> 0x80000018: [102m call[rt_hw_interrupt_dis@0x80000018] [m
index 1096-> 0x80000010: [102m call[rt_hw_interrupt_ena@0x80000010] [m
index 1097-> 0x80016d74: [102m call[rt_smem_alloc@0x80016d74] [m
index 1098-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
index 1099-> 0x800167dc: [102m call[rt_assert_handler@0x800167dc] [m
index 1100-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 1101-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 1102-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 1103-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 1104-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 1105-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 1106-> 0x80058790: [102m call[__umoddi3@0x80058790] [m
index 1107-> 0x80058304: [102m call[__udivmoddi4@0x80058304] [m
index 1108-> 0x80058788: [102m call[__udivdi3@0x80058788] [m
index 1109-> 0x80013540: [102m call[rt_device_write@0x80013540] [m
index 1110-> 0x800178cc: [102m call[rt_object_get_type@0x800178cc] [m
